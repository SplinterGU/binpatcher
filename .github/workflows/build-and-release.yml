name: Build and Release

on:
  push:
    branches:
      - main
    tags:
      - 'v*'

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Build for Linux
        run: |
          mkdir build-linux
          cd build-linux
          cmake ..
          make

      - name: Upload Linux Build Artifact
        uses: actions/upload-artifact@v3
        with:
          name: build-linux
          path: build-linux/binpatcher

  build-windows:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up MinGW toolchain
        run: |
          sudo apt-get update
          sudo apt-get install -y mingw-w64
          echo "CC=x86_64-w64-mingw32-gcc" >> $GITHUB_ENV
          echo "CXX=x86_64-w64-mingw32-g++" >> $GITHUB_ENV

      - name: Build for Windows
        run: |
          mkdir build-windows
          cd build-windows
          cmake -DCMAKE_TOOLCHAIN_FILE=../cmake/Toolchains/Toolchain-cross-mingw.cmake ..
          make

      - name: Upload Windows Build Artifact
        uses: actions/upload-artifact@v3
        with:
          name: build-windows
          path: build-windows/binpatcher.exe

  release:
    runs-on: ubuntu-latest
    needs: [build, build-windows]

    steps:
      - name: Download Linux Build Artifact
        uses: actions/download-artifact@v3
        with:
          name: build-linux
          path: build-linux/

      - name: Download Windows Build Artifact
        uses: actions/download-artifact@v3
        with:
          name: build-windows
          path: build-windows/

      - name: Create Release and Upload Binaries
        if: startsWith(github.ref, 'refs/tags/')
        uses: softprops/action-gh-release@v1
        with:
          files: |
            build-linux/binpatcher
            build-windows/binpatcher.exe
          tag_name: ${{ github.ref_name }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
